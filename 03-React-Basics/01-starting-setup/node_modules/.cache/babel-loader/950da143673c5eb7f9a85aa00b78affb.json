{"ast":null,"code":"var _jsxFileName = \"/Users/jinctmac/code/JinCTMac/2021-react-course/03-React-Basics/01-starting-setup/src/components/expense_date.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst expenseDate = props => {\n  // when splitting date into its own Component, we need to get props again to access the data from the App.js\n  const expenseMonth = props.date.toLocaleString('en-US', {\n    month: 'long'\n  });\n  const expenseDay = props.date.toLocaleString('en-US', {\n    day: '2-digit'\n  });\n  const expenseYear = props.date.getFullYear();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: expenseMonth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: expenseYear\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: expenseDay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\nexport default expenseDate;","map":{"version":3,"sources":["/Users/jinctmac/code/JinCTMac/2021-react-course/03-React-Basics/01-starting-setup/src/components/expense_date.jsx"],"names":["expenseDate","props","expenseMonth","date","toLocaleString","month","expenseDay","day","expenseYear","getFullYear"],"mappings":";;;AAAA,MAAMA,WAAW,GAAIC,KAAD,IAAW;AAC7B;AACA,QAAMC,YAAY,GAAGD,KAAK,CAACE,IAAN,CAAWC,cAAX,CAA0B,OAA1B,EAAmC;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAnC,CAArB;AACA,QAAMC,UAAU,GAAGL,KAAK,CAACE,IAAN,CAAWC,cAAX,CAA0B,OAA1B,EAAmC;AAAEG,IAAAA,GAAG,EAAE;AAAP,GAAnC,CAAnB;AACA,QAAMC,WAAW,GAAGP,KAAK,CAACE,IAAN,CAAWM,WAAX,EAApB;AAEA,sBACE;AAAA,4BAEE;AAAA,gBAAMP;AAAN;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,gBAAMM;AAAN;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,gBAAMF;AAAN;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAdD;;AAgBA,eAAeN,WAAf","sourcesContent":["const expenseDate = (props) => {\n  // when splitting date into its own Component, we need to get props again to access the data from the App.js\n  const expenseMonth = props.date.toLocaleString('en-US', { month: 'long' });\n  const expenseDay = props.date.toLocaleString('en-US', { day: '2-digit'});\n  const expenseYear = props.date.getFullYear();\n\n  return (\n    <div>\n      {/* {props.date.toISOString()} */}\n      <div>{expenseMonth}</div>\n      <div>{expenseYear}</div>\n      <div>{expenseDay}</div>\n    </div>\n  )\n}\n\nexport default expenseDate;\n"]},"metadata":{},"sourceType":"module"}